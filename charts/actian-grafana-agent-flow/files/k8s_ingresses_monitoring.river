// Arguments

// Targets must be a list(map(string)) of targets to scrape
argument "targets" {
	optional = false
}

// forward_metrics_to must be a list(MetricsReceiver) where collected metrics
// should be forwarded.
argument "forward_metrics_to" {
	optional = false
}

// scrape_interval is a duration which specifies how frequently to collect
// metrics.
argument "scrape_interval" {
	optional = true
	default  = "30s"
}

// scrape_timeout is a duration which specifies how long to wait for a single
// metrics collection to complete.
argument "scrape_timeout" {
	optional = true
	default  = "10s"
}

// Processing
discovery.relabel "ingresses" {
	targets = argument.targets.value

	// rule {
	// 	replacement  = "discovery_relabel_k8s_ingresses"
	// 	target_label = "flow_module_name_1"
	// }

	rule {
		target_label = "job"
		replacement  = "integrations/kubernetes/ingresses"
	}
}

prometheus.scrape "ingresses" {
	targets = discovery.relabel.ingresses.output

	forward_to = [prometheus.relabel.ingresses.receiver]

	bearer_token_file = "/var/run/secrets/kubernetes.io/serviceaccount/token"

	scrape_interval = "30s"
	scrape_timeout  = "10s"

	tls_config {
		ca_file              = "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"
		insecure_skip_verify = false
		server_name          = "kubernetes"
	}
}

prometheus.relabel "ingresses" {
	rule {
		source_labels = ["__name__"]
		action        = "drop"
		regex         = "go_.*"
	}

	forward_to = argument.forward_metrics_to.value
}
