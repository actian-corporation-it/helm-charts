// Targets must be a list(map(string)) that are discovered nodes and pods
argument "pods_targets" {
	optional = false
}

argument "nodes_targets" {
	optional = false
}

argument "endpoints_targets" {
	optional = false
}

// forward_metrics_to must be a list(MetricsReceiver) where collected metrics
// should be forwarded.
argument "forward_metrics_to" {
	optional = false
}

// scrape_interval is a duration which specifies how frequently to collect
// metrics.
argument "scrape_interval" {
	optional = true
	default  = "30s"
}

// scrape_timeout is a duration which specifies how long to wait for a single
// metrics collection to complete.
argument "scrape_timeout" {
	optional = true
	default  = "10s"
}

// Processing

discovery.relabel "ksm" {
	targets = argument.pods_targets.value

	// rule {
	// 	replacement  = "discovery_relabel_ksm"
	// 	target_label = "flow_module_name_1"
	// }

	rule {
		source_labels = ["__meta_kubernetes_pod_label_app_kubernetes_io_name"]
		regex         = "kube-state-metrics"
		action		  = "keep"
	}

	rule {
		replacement   = "integrations/kubernetes/kube-state-metrics"
		target_label  = "job"
	}
}

discovery.relabel "cadvisor" {
	targets = argument.nodes_targets.value

	// rule {
	// 	replacement  = "discovery_relabel_cadvisor"
	// 	target_label = "flow_module_name_2"
	// }

	rule {
		target_label = "job"
		replacement  = "integrations/kubernetes/cadvisor"
	}

	rule {
		target_label = "__scheme__"
		replacement  = "https"
	}

	rule {
		target_label = "__address__"
		replacement  = "kubernetes.default.svc.cluster.local:443"
	}

	rule {
		regex         = "(.+)"
		replacement   = "/api/v1/nodes/${1}/proxy/metrics/cadvisor"
		source_labels = ["__meta_kubernetes_node_name"]
		target_label  = "__metrics_path__"
	}
}

discovery.relabel "kubelet" {
	targets = argument.nodes_targets.value

	// rule {
	// 	replacement  = "discovery_relabel_kubelet"
	// 	target_label = "flow_module_name_3"
	// }

	rule {
		target_label = "job"
		replacement  = "integrations/kubernetes/kubelet"
	}

	rule {
		target_label = "__scheme__"
		replacement  = "https"
	}

	rule {
		target_label = "__address__"
		replacement  = "kubernetes.default.svc.cluster.local:443"
	}

	rule {
		regex         = "(.+)"
		replacement   = "/api/v1/nodes/${1}/proxy/metrics"
		source_labels = ["__meta_kubernetes_node_name"]
		target_label  = "__metrics_path__"
	}
}

discovery.relabel "apiserver_endpoints" {
	targets = argument.endpoints_targets.value

	// rule {
	// 	replacement  = "discovery_relabel_api_server_endpoints"
	// 	target_label = "flow_module_name_4"
	// }

	rule {
		source_labels = ["__meta_kubernetes_service_label_component"]
		regex         = "apiserver"
		action        = "keep"
	}

	rule {
		target_label = "__scheme__"
		replacement  = "https"
	}

	rule {
		target_label = "job"
		replacement  = "integrations/kubernetes/endpoints"
	}
}

prometheus.scrape "k8s_api" {
	targets = concat(
		discovery.relabel.ksm.output,
		discovery.relabel.cadvisor.output,
		discovery.relabel.kubelet.output,
	)

	forward_to = [prometheus.relabel.k8s_api.receiver]

	bearer_token_file = "/var/run/secrets/kubernetes.io/serviceaccount/token"

	scrape_interval = argument.scrape_interval.value
	scrape_timeout  = argument.scrape_timeout.value

	tls_config {
		ca_file              = "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"
		insecure_skip_verify = false
		server_name          = "kubernetes"
	}
}

prometheus.scrape "apiserver_endpoints" {
	targets = discovery.relabel.apiserver_endpoints.output

	forward_to = [prometheus.relabel.apiserver_endpoints.receiver]

	bearer_token_file = "/var/run/secrets/kubernetes.io/serviceaccount/token"

	scrape_interval = argument.scrape_interval.value
	scrape_timeout  = argument.scrape_timeout.value

	tls_config {
		ca_file              = "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"
		insecure_skip_verify = false
		server_name          = "kubernetes"
	}
}

prometheus.relabel "k8s_api" {
	rule {
		source_labels = ["__name__"]
		action        = "drop"
		regex         = "go_.*"
	}

	rule {
		source_labels = ["__name__"]
		action        = "keep"
		regex         = "cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits|cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests|cluster:namespace:pod_memory:active:kube_pod_container_resource_limits|cluster:namespace:pod_memory:active:kube_pod_container_resource_requests|container_cpu_cfs_periods_total|container_cpu_cfs_throttled_periods_total|container_cpu_usage_seconds_total|container_fs_limit_bytes|container_fs_reads_bytes_total|container_fs_reads_total|container_fs_usage_bytes|container_fs_writes_bytes_total|container_fs_writes_total|container_memory_cache|container_memory_rss|container_memory_swap|container_memory_working_set_bytes|container_network_receive_bytes_total|container_network_receive_packets_dropped_total|container_network_receive_packets_total|container_network_transmit_bytes_total|container_network_transmit_packets_dropped_total|container_network_transmit_packets_total|container_spec_memory_limit_bytes|go_goroutines|kube_daemonset.*|kube_daemonset_status_current_number_scheduled|kube_daemonset_status_desired_number_scheduled|kube_daemonset_status_number_available|kube_daemonset_status_number_misscheduled|kube_daemonset_status_updated_number_scheduled|kube_daemonset_updated_number_scheduled|kube_deployment_metadata_generation|kube_deployment_spec_replicas|kube_deployment_status_observed_generation|kube_deployment_status_replicas|kube_deployment_status_replicas_available|kube_deployment_status_replicas_ready|kube_deployment_status_replicas_unavailable|kube_deployment_status_replicas_updated|kube_horizontalpodautoscaler_spec_max_replicas|kube_horizontalpodautoscaler_spec_min_replicas|kube_horizontalpodautoscaler_status_current_replicas|kube_horizontalpodautoscaler_status_desired_replicas|kube_job.*|kube_job_failed|kube_job_spec_completions|kube_job_status_active|kube_job_status_start_time|kube_job_status_succeeded|kube_namespace_status_phase|kube_node.*|kube_node_info|kube_node_spec_taint|kube_node_spec_unschedulable|kube_node_status_allocatable|kube_node_status_capacity|kube_node_status_condition|kube_persistentvolume_status_phase|kube_pod_container_info|kube_pod_container_resource_limits|kube_pod_container_resource_requests|kube_pod_container_status_ready|kube_pod_container_status_restarts_total|kube_pod_container_status_running|kube_pod_container_status_terminated|kube_pod_container_status_terminated_reason|kube_pod_container_status_waiting|kube_pod_container_status_waiting_reason|kube_pod_info|kube_pod_labels|kube_pod_owner|kube_pod_spec_volumes_persistentvolumeclaims_info|kube_pod_start_time|kube_pod_status_phase|kube_replicaset.*|kube_replicaset_owner|kube_resourcequota|kube_statefulset.*|kube_statefulset_metadata_generation|kube_statefulset_replicas|kube_statefulset_status_current_revision|kube_statefulset_status_observed_generation|kube_statefulset_status_replicas|kube_statefulset_status_replicas_ready|kube_statefulset_status_replicas_updated|kube_statefulset_status_update_revision|kubelet_certificate_manager_client_expiration_renew_errors|kubelet_certificate_manager_client_ttl_seconds|kubelet_certificate_manager_server_ttl_seconds|kubelet_cgroup_manager_duration_seconds_bucket|kubelet_cgroup_manager_duration_seconds_count|kubelet_node_config_error|kubelet_node_name|kubelet_pleg_relist_duration_seconds_bucket|kubelet_pleg_relist_duration_seconds_count|kubelet_pleg_relist_interval_seconds_bucket|kubelet_pod_start_duration_seconds_bucket|kubelet_pod_start_duration_seconds_count|kubelet_pod_worker_duration_seconds_bucket|kubelet_pod_worker_duration_seconds_count|kubelet_running_container_count|kubelet_running_containers|kubelet_running_pod_count|kubelet_running_pods|kubelet_runtime_operations_errors_total|kubelet_runtime_operations_total|kubelet_server_expiration_renew_errors|kubelet_volume_stats_available_bytes|kubelet_volume_stats_capacity_bytes|kubelet_volume_stats_inodes|kubelet_volume_stats_inodes_used|kubelet_volume_stats_used_bytes|kubernetes_build_info|machine_memory_bytes|namespace_cpu:kube_pod_container_resource_limits:sum|namespace_cpu:kube_pod_container_resource_requests:sum|namespace_memory:kube_pod_container_resource_limits:sum|namespace_memory:kube_pod_container_resource_requests:sum|namespace_workload_pod|namespace_workload_pod:kube_pod_owner:relabel|node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate|node_namespace_pod_container:container_memory_cache|node_namespace_pod_container:container_memory_rss|node_namespace_pod_container:container_memory_swap|node_namespace_pod_container:container_memory_working_set_bytes|node_quantile:kubelet_pleg_relist_duration_seconds:histogram_quantile|storage_operation_duration_seconds_count|storage_operation_errors_total|volume_manager_total_volumes"
	}

	forward_to = argument.forward_metrics_to.value
}

prometheus.relabel "apiserver_endpoints" {
	rule {
		source_labels = ["__name__"]
		action        = "drop"
		regex         = "go_.*"
	}

	rule {
		source_labels = ["__name__"]
		action        = "keep"
		regex         = "up|workqueue_queue_duration_seconds_bucket|process_cpu_seconds_total|process_resident_memory_bytes|workqueue_depth|rest_client_request_duration_seconds_bucket|workqueue_adds_total|rest_client_requests_total|apiserver_request_total"
	}

	forward_to = argument.forward_metrics_to.value
}
