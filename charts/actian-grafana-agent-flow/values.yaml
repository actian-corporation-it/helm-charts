global:
  actian:
    agentLogLevel: warn
    namespace: grafana-agent
    grafanaExternalSecretName: grafana-agent-secrets
    grafanaBbcExternalSecretName: grafana-agent-bbc-secrets
    clusterName: changeme_cluster_name
    environment: changeme_cluster_environment
    cloudProvider: changeme_cloud_service_provider
    clusterRegion: changeme_cluster_region
    grafanaRegion: changeme_grafana_region

clusterSecretStore:
  saReference: false
  cabundle_secretName: vault.cabundle
  clusterStore_name: grafana-agent-secrets-store
  k8s_sa: changeme_k8s_service_account
  k8s_sa_auth_token: changeme_k8s_service_account_auth_token
  namespace: changeme_external_secrets_namespace
  vault_auth_path: changeme_vault_k8s_auth_path
  vault_role: changeme_vault_k8s_auth_role
  vault_kv_path: secret/grafana
  vault_server: vault.cloudops.actiandatacloud.com

grafana-agent-logs:
  fullnameOverride: grafana-agent-logs
  agent:
    mode: 'flow'
    configMap:
      create: false
      name: grafana-agent-logs-config
      key: agent-config.river
    storagePath: /var/tmp/grafana-agent/grafana-agent-logs
    enableReporting: false
    extraEnv:
      - name: GIT_USERNAME
        valueFrom:
          secretKeyRef:
            name: grafana-agent-bbc-secrets
            key: username
      - name: GIT_PASSWORD
        valueFrom:
          secretKeyRef:
            name: grafana-agent-bbc-secrets
            key: token
      - name: LOGS_USERNAME
        valueFrom:
          secretKeyRef:
            name: grafana-agent-secrets
            key: loki-user
      - name: LOGS_PASSWORD
        valueFrom:
          secretKeyRef:
            name: grafana-agent-secrets
            key: loki-password
      - name: LOGS_URL
        valueFrom:
          secretKeyRef:
            name: grafana-agent-secrets
            key: loki-write-url
    mounts:
      varlog: true
      dockercontainers: true
      extra:
        - name: grafana-agent-actian-modules
          mountPath: /etc/agent/modules/actian
          readOnly: true
  controller:
    type: 'daemonset'
    updateStrategy:
      type: RollingUpdate
    tolerations:
      - effect: NoSchedule
        operator: Exists
    volumes:
      extra:
        - name: grafana-agent-actian-modules
          configMap:
            name: grafana-agent-actian-modules
    podAnnotations:
      logs.agent.grafana.com/log-format: logfmt
      logs.agent.grafana.com/scrub-timestamp: "true"
      logs.agent.grafana.com/scrub-level: "true"
      logs.agent.grafana.com/drop-debug: "false"
      logs.agent.grafana.com/embed-pod: "true"
  service:
    enabled: true
    annotations:
      metrics.agent.grafana.com/scrape: "true"

grafana-agent-metrics:
  fullnameOverride: grafana-agent-metrics
  agent:
    mode: 'flow'
    configMap:
      create: false
      name: grafana-agent-metrics-config
      key: agent-config.river
    storagePath: /var/lib/grafana-agent/grafana-agent-metrics
    enableReporting: false
    extraPorts: []
    extraEnv:
      - name: GIT_USERNAME
        valueFrom:
          secretKeyRef:
            name: grafana-agent-bbc-secrets
            key: username
      - name: GIT_PASSWORD
        valueFrom:
          secretKeyRef:
            name: grafana-agent-bbc-secrets
            key: token
      - name: METRICS_USERNAME
        valueFrom:
          secretKeyRef:
            name: grafana-agent-secrets
            key: prometheus-user
      - name: METRICS_PASSWORD
        valueFrom:
          secretKeyRef:
            name: grafana-agent-secrets
            key: prometheus-password
      - name: METRICS_URL
        valueFrom:
          secretKeyRef:
            name: grafana-agent-secrets
            key: prometheus-remote-write-url
    mounts:
      varlog: false
      dockercontainers: false
      extra:
        - name: grafana-agent-actian-modules
          mountPath: /etc/agent/modules/actian
          readOnly: true
  controller:
    type: 'statefulset'
    replicas: 1
    updateStrategy:
      type: RollingUpdate
    volumes:
      extra:
        - name: grafana-agent-actian-modules
          configMap:
            name: grafana-agent-actian-modules
    podAnnotations:
      logs.agent.grafana.com/log-format: logfmt
      logs.agent.grafana.com/scrub-timestamp: "true"
      logs.agent.grafana.com/scrub-level: "true"
      logs.agent.grafana.com/drop-debug: "false"
      logs.agent.grafana.com/embed-pod: "true"
  service:
    enabled: true
    annotations:
      metrics.agent.grafana.com/scrape: "true"

grafana-agent-k8s-events:
  fullnameOverride: grafana-agent-k8s-events
  agent:
    mode: 'flow'
    configMap:
      create: false
      name: grafana-agent-k8s-events-config
      key: agent-config.river
    clustering:
      enabled: false
    storagePath: /var/lib/grafana-agent/grafana-agent-k8s-events
    enableReporting: false
    extraEnv:
      - name: GIT_USERNAME
        valueFrom:
          secretKeyRef:
            name: grafana-agent-bbc-secrets
            key: username
      - name: GIT_PASSWORD
        valueFrom:
          secretKeyRef:
            name: grafana-agent-bbc-secrets
            key: token
      - name: LOGS_USERNAME
        valueFrom:
          secretKeyRef:
            name: grafana-agent-secrets
            key: loki-user
      - name: LOGS_PASSWORD
        valueFrom:
          secretKeyRef:
            name: grafana-agent-secrets
            key: loki-password
      - name: LOGS_URL
        valueFrom:
          secretKeyRef:
            name: grafana-agent-secrets
            key: loki-write-url
    mounts:
      varlog: false
      dockercontainers: false
      extra:
        - name: grafana-agent-actian-modules
          mountPath: /etc/agent/modules/actian
          readOnly: true
  controller:
    type: 'statefulset'
    replicas: 1
    updateStrategy:
      type: RollingUpdate
    volumes:
      extra:
        - name: grafana-agent-actian-modules
          configMap:
            name: grafana-agent-actian-modules
    podAnnotations:
      logs.agent.grafana.com/log-format: logfmt
      logs.agent.grafana.com/scrub-timestamp: "true"
      logs.agent.grafana.com/scrub-level: "true"
      logs.agent.grafana.com/drop-debug: "false"
      logs.agent.grafana.com/embed-pod: "true"
  service:
    enabled: true
    annotations:
      metrics.agent.grafana.com/scrape: "true"

grafana-agent-otlp:
  fullnameOverride: grafana-agent-otlp
  agent:
    mode: 'flow'
    configMap:
      create: false
      name: grafana-agent-otlp-config
      key: agent-config.river
    storagePath: /var/lib/grafana-agent/grafana-agent-otlp
    enableReporting: false
    extraPorts:
      - name: otlp-grpc
        port: 4317
        targetPort: 4317
      - name: otlp-http
        port: 4318
        targetPort: 4318
    extraEnv:
      - name: GIT_USERNAME
        valueFrom:
          secretKeyRef:
            name: grafana-agent-bbc-secrets
            key: username
      - name: GIT_PASSWORD
        valueFrom:
          secretKeyRef:
            name: grafana-agent-bbc-secrets
            key: token
      - name: METRICS_USERNAME
        valueFrom:
          secretKeyRef:
            name: grafana-agent-secrets
            key: prometheus-user
      - name: METRICS_PASSWORD
        valueFrom:
          secretKeyRef:
            name: grafana-agent-secrets
            key: prometheus-password
      - name: METRICS_URL
        valueFrom:
          secretKeyRef:
            name: grafana-agent-secrets
            key: prometheus-remote-write-url
      - name: LOGS_USERNAME
        valueFrom:
          secretKeyRef:
            name: grafana-agent-secrets
            key: loki-user
      - name: LOGS_PASSWORD
        valueFrom:
          secretKeyRef:
            name: grafana-agent-secrets
            key: loki-password
      - name: LOGS_URL
        valueFrom:
          secretKeyRef:
            name: grafana-agent-secrets
            key: loki-write-url
    mounts:
      varlog: false
      dockercontainers: false
      extra:
        - name: grafana-agent-actian-modules
          mountPath: /etc/agent/modules/actian
          readOnly: true
  controller:
    type: 'statefulset'
    replicas: 1
    updateStrategy:
      type: RollingUpdate
    volumes:
      extra:
        - name: grafana-agent-actian-modules
          configMap:
            name: grafana-agent-actian-modules
    podAnnotations:
      logs.agent.grafana.com/log-format: logfmt
      logs.agent.grafana.com/scrub-timestamp: "true"
      logs.agent.grafana.com/scrub-level: "true"
      logs.agent.grafana.com/drop-debug: "false"
      logs.agent.grafana.com/embed-pod: "true"
  service:
    enabled: true
    annotations:
      metrics.agent.grafana.com/scrape: "true"
