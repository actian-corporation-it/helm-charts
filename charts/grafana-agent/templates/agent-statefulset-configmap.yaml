{{- if .Values.metrics.enabled -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-statefulset
data:
  agent.yaml: |
    server:
      log_format: {{ .Values.daemonset.logFormat }}
      log_level: {{ .Values.statefulset.logLevel }}
    metrics:
      wal_directory: "{{ .Values.global.agentVarDirectory }}/data"
      global:
        scrape_interval: {{ .Values.metrics.scrapeInterval }}
        external_labels:
{{ include "agentConfig.externalLabels" . | indent 10 }}
        remote_write:
{{ include "prometheus.authentication" . | indent 8 }}
      configs:
      - name: {{ .Values.metrics.instanceName }}
        host_filter: false
        scrape_configs:
        {{- if .Values.metrics.services.hashicorpVault.enabled -}}
        {{ $hashicorpVaultTarget := (include "hashicorpVault.target" .) }}
        # Vault Server
        - job_name: vault
          static_configs:
            - targets:
              - {{ $hashicorpVaultTarget }}
          metrics_path: /v1/sys/metrics
          relabel_configs:
          - source_labels: [__address__]
            target_label: __param_target
            regex: ([\w\-\_]+)\..+:\d+
          - source_labels: [__param_target]
            target_label: instance
        {{- end }}
        {{- if .Values.metrics.services.hashicorpConsul.enabled -}}
        {{ $hashicorpConsulTarget := (include "hashicorpConsul.target" .) }}
        # Consul Server
        - job_name: consul
          static_configs:
            - targets:
              - {{ $hashicorpConsulTarget }}
          metrics_path: /v1/agent/metrics
          relabel_configs:
          - source_labels: [__address__]
            target_label: __param_target
            regex: ([\w\-\_]+)\..+:\d+
          - source_labels: [__param_target]
            target_label: instance
        {{- end }}
        {{- if .Values.metrics.services.ingressNginx.enabled -}}
        {{ $ingressNginxTarget := (include "ingressNginx.target" .) }}
        # NGINX Ingress Controller
        - job_name: nginx-ingress
          static_configs:
            - targets:
              - {{ $ingressNginxTarget }}
          relabel_configs:
          - source_labels: [__address__]
            target_label: __param_target
            regex: ([\w\-\_]+)\..+:\d+
          - source_labels: [__param_target]
            target_label: instance
        {{- end }}
        {{- if .Values.metrics.services.trivy.enabled -}}
        {{ $trivyTarget := (include "trivy.target" .) }}
        # Trivy
        - job_name: trivy
          static_configs:
            - targets:
              - {{ $trivyTarget }}
          relabel_configs:
          - source_labels: [__address__]
            target_label: __param_target
            regex: ([\w\-\_]+)\..+:\d+
          - source_labels: [__param_target]
            target_label: instance
        {{- end }}
        # Istio jobs
        # istio-mesh
        - job_name: 'istio-mesh'
          kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
              - istio-system
          relabel_configs:
          - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
            action: keep
            regex: istio-telemetry;prometheus
        # envoy stats
        - job_name: 'envoy-stats'
          metrics_path: /stats/prometheus
          kubernetes_sd_configs:
          - role: pod
          {{- if .Values.metrics.filters.istioEnvoyStats }}
          metric_relabel_configs:
            {{ range $.Values.metrics.filters.istioEnvoyStats -}}
            - action: {{ .action }}
              source_labels: {{ .source_labels }}
              regex: {{ .regex }}
            {{- end }}
          {{- end }}
          relabel_configs:
          - source_labels: [__meta_kubernetes_pod_container_port_name]
            action: keep
            regex: '.*-envoy-prom'
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:15090
            target_label: __address__
          - action: labeldrop
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: pod_name
        # istio-policy
        - job_name: 'istio-policy'
          kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
              - istio-system
          relabel_configs:
          - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
            action: keep
            regex: istio-policy;http-policy-monitoring
        # istio-telemetry
        - job_name: 'istio-telemetry'
          kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
              - istio-system
          relabel_configs:
          - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
            action: keep
            regex: istio-telemetry;http-monitoring
        # istio-pilot
        - job_name: 'istio-pilot'
          kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
              - istio-system
          relabel_configs:
          - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
            action: keep
            regex: istiod;http-monitoring
          - source_labels: [__meta_kubernetes_service_label_app]
            target_label: app
        # istio-galley
        - job_name: 'istio-galley'
          kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
              - istio-system
          relabel_configs:
          - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
            action: keep
            regex: istio-galley;http-monitoring
        # istio-citadel
        - job_name: 'istio-citadel'
          kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
              - istio-system
          relabel_configs:
          - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
            action: keep
            regex: istio-citadel;http-monitoring
        # istio-sidecar-injector
        - job_name: 'sidecar-injector'
          kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
              - istio-system
          relabel_configs:
          - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
            action: keep
            regex: istio-sidecar-injector;http-monitoring
        {{- if .Values.metrics.services.velero.enabled -}}
        {{ $veleroTarget := (include "velero.target" .) }}
        # Velero
        - job_name: velero
          static_configs:
            - targets:
              - {{ $veleroTarget }}
          relabel_configs:
            - source_labels: [__address__]
              target_label: __param_target
              regex: ([\w\-\_]+)\..+:\d+
            - source_labels: [__param_target]
              target_label: instance
        {{- end }}
        {{- if .Values.metrics.services.argocdDev.enabled -}}
        - job_name: argocd-dev
          static_configs:
            - targets:
              - argocd-applicationset-controller.argocd-dev.svc.cluster.local:8080
              - argocd-metrics.argocd-dev.svc.cluster.local:8082
              - argocd-server-metrics.argocd-dev.svc.cluster.local:8083
              - argocd-repo-server.argocd-dev.svc.cluster.local:8084
          relabel_configs:
            - source_labels: [__address__]
              target_label: __param_target
              regex: ([\w\-\_]+)\..+:\d+
            - source_labels: [__param_target]
              target_label: instance
        {{- end }}
        {{- if .Values.metrics.services.argocdTest.enabled -}}
        - job_name: argocd-test
          static_configs:
            - targets:
              - argocd-applicationset-controller.argocd-test.svc.cluster.local:8080
              - argocd-metrics.argocd-test.svc.cluster.local:8082
              - argocd-server-metrics.argocd-test.svc.cluster.local:8083
              - argocd-repo-server.argocd-test.svc.cluster.local:8084
          relabel_configs:
            - source_labels: [__address__]
              target_label: __param_target
              regex: ([\w\-\_]+)\..+:\d+
            - source_labels: [__param_target]
              target_label: instance
        {{- end }}
        {{- if .Values.metrics.services.argocdStage.enabled -}}
        - job_name: argocd-stage
          static_configs:
            - targets:
              - argocd-applicationset-controller.argocd-stage.svc.cluster.local:8080
              - argocd-metrics.argocd-stage.svc.cluster.local:8082
              - argocd-server-metrics.argocd-stage.svc.cluster.local:8083
              - argocd-repo-server.argocd-stage.svc.cluster.local:8084
          relabel_configs:
            - source_labels: [__address__]
              target_label: __param_target
              regex: ([\w\-\_]+)\..+:\d+
            - source_labels: [__param_target]
              target_label: instance
        {{- end }}
        {{- if .Values.metrics.services.argocdProduction.enabled -}}
        - job_name: argocd-production
          static_configs:
            - targets:
              - argocd-applicationset-controller.argocd-production.svc.cluster.local:8080
              - argocd-metrics.argocd-production.svc.cluster.local:8082
              - argocd-server-metrics.argocd-production.svc.cluster.local:8083
              - argocd-repo-server.argocd-production.svc.cluster.local:8084
          relabel_configs:
            - source_labels: [__address__]
              target_label: __param_target
              regex: ([\w\-\_]+)\..+:\d+
            - source_labels: [__param_target]
              target_label: instance
        {{- end }}
        {{- if .Values.metrics.services.certManager.enabled -}}
        {{ $certManagerTarget := (include "certManager.target" .) }}
        # Cert-Manager
        - job_name: cert-manager
          static_configs:
            - targets:
              - {{ $certManagerTarget }}
          relabel_configs:
            - source_labels: [__address__]
              target_label: __param_target
              regex: ([\w\-\_]+)\..+:\d+
            - source_labels: [__param_target]
              target_label: instance
        {{- end }}
        {{- if .Values.metrics.services.externalSecrets.enabled -}}
        {{ $externalSecretsTarget := (include "externalSecrets.target" .) }}
        # External-Secrets-Operator
        - job_name: external-secrets
          static_configs:
            - targets:
              - {{ $externalSecretsTarget }}
          relabel_configs:
            - source_labels: [__address__]
              target_label: __param_target
              regex: ([\w\-\_]+)\..+:\d+
            - source_labels: [__param_target]
              target_label: instance
        {{- end }}
        {{- if .Values.metrics.services.rabbitmq.enabled -}}
        {{ $rabbitmqTarget := (include "rabbitmq.target" .) }}
        # RabbitMQ
        - job_name: rabbitmq
          static_configs:
            - targets:
              - {{ $rabbitmqTarget }}
          metrics_path: /metrics/per-object
          relabel_configs:
            - source_labels: [__address__]
              target_label: __param_target
              regex: ([\w\-\_]+)\..+:\d+
            - source_labels: [__param_target]
              target_label: instance
        {{- end }}
        - job_name: cadvisor
          bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
          kubernetes_sd_configs:
            - role: node
          {{- if .Values.metrics.filters.cadvisor }}
          metric_relabel_configs:
            {{ range $.Values.metrics.filters.cadvisor -}}
            - action: {{ .action }}
              source_labels: {{ .source_labels }}
              regex: {{ .regex }}
            {{- end }}
          {{- end }}
          relabel_configs:
            - replacement: kubernetes.default.svc:443
              target_label: __address__
            - regex: (.+)
              replacement: /api/v1/nodes/$1/proxy/metrics/cadvisor
              source_labels:
                - __meta_kubernetes_node_name
              target_label: __metrics_path__
          scheme: https
          tls_config:
              ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
              insecure_skip_verify: false
              server_name: kubernetes
        - job_name: kubelet
          bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
          kubernetes_sd_configs:
            - role: node
          {{- if .Values.metrics.filters.kubelet }}
          metric_relabel_configs:
            {{ range $.Values.metrics.filters.kubelet -}}
            - action: {{ .action }}
              source_labels: {{ .source_labels }}
              regex: {{ .regex }}
            {{- end }}
          {{- end }}
          relabel_configs:
            - replacement: kubernetes.default.svc.cluster.local:443
              target_label: __address__
            - regex: (.+)
              replacement: /api/v1/nodes/$1/proxy/metrics
              source_labels:
                - __meta_kubernetes_node_name
              target_label: __metrics_path__
          scheme: https
          tls_config:
            ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
            insecure_skip_verify: false
            server_name: kubernetes
        # kube-state-metrics
        - job_name: kube-state-metrics
          kubernetes_sd_configs:
            - role: service
          {{- if .Values.metrics.filters.kubeStateMetrics }}
          metric_relabel_configs:
            {{ range $.Values.metrics.filters.kubeStateMetrics -}}
            - action: {{ .action }}
              source_labels: {{ .source_labels }}
              regex: {{ .regex }}
            {{- end }}
          {{- end }}
          relabel_configs:
            - action: keep
              regex: kube-state-metrics
              source_labels:
                - __meta_kubernetes_service_name
{{- end }}
