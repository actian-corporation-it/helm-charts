{{- if or .Values.metrics.enabled .Values.logs.enabled .Values.tracing.enabled -}}
{{ $daemonsetServiceName := (include "daemonset.ServiceName" .) }}
{{ $daemonsetConfigMapName := (include "daemonset.ConfigMapName" .) }}
{{ $daemonsetServiceAccountName := (include "daemonset.ServiceAccountName" .) }}
{{ $grafanaAgentVersion := (include "grafanaAgent.Version" .) }}
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ $daemonsetServiceName }}
  namespace: {{ .Values.global.namespace }}
  annotations:
{{ include "annotations.versions" . | indent 4 }}
spec:
  minReadySeconds: 10
  selector:
    matchLabels:
      name: {{ $daemonsetServiceName }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/agent-daemonset-configmap.yaml") . | sha256sum }}
      labels:
        name: {{ $daemonsetServiceName }}
    spec:
      containers:
      - args:
        - -config.file=/etc/agent/agent.yaml
        - -enable-features=integrations-next
        - -server.http.address=0.0.0.0:{{ .Values.daemonset.serverPort }}
        - -config.expand-env
        command:
        - /bin/agent
        env:
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: PROMETHEUS_USER
          valueFrom:
            secretKeyRef:
              name: {{ .Values.global.externalSecretName }}
              key: prometheus-user
        - name: PROMETHEUS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.global.externalSecretName }}
              key: prometheus-password
        - name: PROMETHEUS_REMOTE_WRITE_URL
          valueFrom:
            secretKeyRef:
              name: {{ .Values.global.externalSecretName }}
              key: prometheus-remote-write-url
        - name: LOKI_USER
          valueFrom:
            secretKeyRef:
              name: {{ .Values.global.externalSecretName }}
              key: loki-user
        - name: LOKI_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.global.externalSecretName }}
              key: loki-password
        - name: LOKI_WRITE_URL
          valueFrom:
            secretKeyRef:
              name: {{ .Values.global.externalSecretName }}
              key: loki-write-url
        image: grafana/agent:{{ $grafanaAgentVersion }}
        imagePullPolicy: IfNotPresent
        name: {{ $daemonsetServiceName }}
        ports:
        - containerPort: {{ .Values.daemonset.serverPort }}
          name: http-metrics
        securityContext:
          privileged: true
          runAsUser: 0
        volumeMounts:
        {{- if .Values.global.timeZone }}
        - mountPath: /etc/localtime
          name: tz-config
        {{- end }}
        - mountPath: /etc/agent
          name: {{ $daemonsetConfigMapName }}
        - mountPath: /var/log
          name: varlog
        - mountPath: /var/lib/docker/containers
          name: varlibdockercontainers
          readOnly: true
      serviceAccount: {{ $daemonsetServiceAccountName }}
      tolerations:
      - effect: NoSchedule
        operator: Exists
      - operator: Exists
      volumes:
      {{- if .Values.global.timeZone }}
      - hostPath:
          path: /usr/share/zoneinfo/{{ .Values.global.timeZone }}
          type: File
        name: tz-config
      {{- end }}
      - configMap:
          name: {{ $daemonsetConfigMapName }}
        name: {{ $daemonsetConfigMapName }}
      - hostPath:
          path: /var/log
        name: varlog
      - hostPath:
          path: /var/lib/docker/containers
        name: varlibdockercontainers
  updateStrategy:
    type: RollingUpdate
{{- end -}}