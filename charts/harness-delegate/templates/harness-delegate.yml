apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ .Values.namespace }}-cluster-admin
subjects:
  - kind: ServiceAccount
    name: {{ .Values.serviceAccount }}
    namespace: {{ .Values.namespace }}
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io
---

{{- if .Values.useProxy }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.proxyName }}
  name: {{ .Values.namespace }}
type: Opaque
data:
  # Enter base64 encoded username and password, if needed
  PROXY_USER: ""
  PROXY_PASSWORD: ""

---
{{- end }}

apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    harness.io/name: {{ .Values.delegateName }}
  name: {{ .Values.delegateName }}
  namespace: {{ .Values.namespace }}
spec:
  replicas: {{ .Values.replicas }}
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      harness.io/name: {{ .Values.delegateName }}
  serviceName: ""
  template:
    metadata:
      labels:
        harness.io/name: {{ .Values.delegateName }}
    spec:
      serviceAccountName: {{ .Values.serviceAccount }}
      containers:
      - image: harness/delegate:latest
        imagePullPolicy: Always
        name: harness-delegate-instance
        ports:
          - containerPort: 8080
        resources:
          limits:
            cpu: "1"
            memory: "4096Mi"
          requests:
            cpu: "0.5"
            memory: "2048Mi"
        readinessProbe:
          exec:
            command:
              - test
              - -s
              - delegate.log
          initialDelaySeconds: 20
          periodSeconds: 10
        livenessProbe:
          exec:
            command:
              - bash
              - -c
              - '[[ -e /opt/harness-delegate/msg/data/watcher-data && $(($(date +%s000) - $(grep heartbeat /opt/harness-delegate/msg/data/watcher-data | cut -d ":" -f 2 | cut -d "," -f 1))) -lt 300000 ]]'
          initialDelaySeconds: 240
          periodSeconds: 10
          failureThreshold: 2
        env:
        - name: JAVA_OPTS
          value: "-Xms64M"
        - name: ACCOUNT_ID
          value: {{ .Values.harnessAccountId }}
        - name: MANAGER_HOST_AND_PORT
          value: https://app.harness.io/gratis
        - name: DEPLOY_MODE
          value: KUBERNETES
        - name: DELEGATE_NAME
          value: {{ .Values.delegateName }}
        - name: DELEGATE_TYPE
          value: "KUBERNETES"
        - name: DELEGATE_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: INIT_SCRIPT
          value: |-
            # Install software with auto approval
            apt-get install curl apt-transport-https ca-certificates gnupg -y
            echo "deb https://packages.cloud.google.com/apt cloud-sdk main" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
            curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -
            curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
            curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | tee /usr/share/keyrings/cloud.google.gpg
            apt-get update
            apt-get install git jq wget curl unzip google-cloud-cli -y
            wget https://github.com/bitnami-labs/sealed-secrets/releases/download/v0.16.0/kubeseal-linux-amd64 -O kubeseal
            install -m 755 kubeseal /usr/local/bin/kubeseal
            # Check git install
            git --version
            # Installing terraform with asdf
            ASDF_PATH=$HOME/.asdf
            TERRAFORM_VERSIONS="{{ .Values.TF_versions }}"
            git clone https://github.com/asdf-vm/asdf.git $ASDF_PATH
            echo ". $ASDF_PATH/asdf.sh" >> ~/.bashrc
            echo PATH=\$PATH:\$HOME/.asdf/shims:\$HOME/.asdf/bin >> /root/.bashrc
            /root/.asdf/bin/asdf --version
            export PATH=$HOME/.asdf/shims:$HOME/.asdf/bin:$PATH
            # Install and configure Terraform plugin and versions
            /root/.asdf/bin/asdf plugin-add terraform https://github.com/Banno/asdf-hashicorp.git 
            for version in $TERRAFORM_VERSIONS; do
              /root/.asdf/bin/asdf install terraform $version
            done
            # Verify Terraform versions
            /root/.asdf/bin/asdf list terraform

            # Set a default version on the delegate
            echo "terraform 1.1.7" > $HOME/.tool-versions 
            # AWS Cli
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            ./aws/install
            aws --version
            #### Adding git/bitbucket cred ######
            cat <<EOM >> $HOME/.netrc 
            machine github.com
            login {{ .Values.github_user }}
            password {{ .Values.github_token }}
            machine alm.actian.com
            login {{ .Values.bitBucket_user }}
            password {{ .Values.bitBucket_token }}
            EOM
        - name: DELEGATE_DESCRIPTION
          value: ""
        - name: DELEGATE_TAGS
          value: ""
        - name: DELEGATE_TASK_LIMIT
          value: "{{ .Values.harnessNumTask }}"
        - name: NEXT_GEN
          value: "true"
        - name: ACCOUNT_SECRET
          value: {{ .Values.harnessAccountSecret }}
        - name: WATCHER_STORAGE_URL
          value: https://app.harness.io/public/free/freemium/watchers
        - name: WATCHER_CHECK_LOCATION
          value: current.version
        - name: DELEGATE_STORAGE_URL
          value: https://app.harness.io
        - name: DELEGATE_CHECK_LOCATION
          value: delegatefree.txt
        - name: HELM_DESIRED_VERSION
          value: ""
        - name: CDN_URL
          value: "https://app.harness.io"
        - name: REMOTE_WATCHER_URL_CDN
          value: "https://app.harness.io/public/shared/watchers/builds"
        - name: JRE_VERSION
          value: 1.8.0_242
        - name: HELM3_PATH
          value: ""
        - name: HELM_PATH
          value: ""
        - name: KUSTOMIZE_PATH
          value: ""
        - name: KUBECTL_PATH
          value: ""
        - name: POLL_FOR_TASKS
          value: "false"
        - name: ENABLE_CE
          value: "false"
        {{- if .Values.useProxy }}
        - name: PROXY_HOST
          value: ""
        - name: PROXY_PORT
          value: ""
        - name: PROXY_SCHEME
          value: ""
        - name: NO_PROXY
          value: ""
        - name: PROXY_MANAGER
          value: "true"
        - name: PROXY_USER
          valueFrom:
            secretKeyRef:
              name: {{ .Values.proxyName }}
              key: PROXY_USER
        - name: PROXY_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.proxyName }}
              key: PROXY_PASSWORD
        {{- end }}
        - name: GRPC_SERVICE_ENABLED
          value: "true"
        - name: GRPC_SERVICE_CONNECTOR_PORT
          value: "8080"
      restartPolicy: Always

---

apiVersion: v1
kind: Service
metadata:
  name: delegate-service
  namespace: {{ .Values.namespace }}
spec:
  type: ClusterIP
  selector:
    harness.io/name: {{ .Values.delegateName }}
  ports:
    - port: 8080
